name: Notify Reviewers on Discord

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions: read-all

jobs:

  notify_discord:
    name: Send PR Notification to Discord
    runs-on: ubuntu-latest
    steps:
      - name: Send PR Notification to Discord
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.sender.login }}"
          PR_URL="${{ github.event.pull_request.html_url }}"

          # GitHub API에서 PR의 리뷰어 정보 가져오기
          API_RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}")

          # 리뷰어 목록 추출 (빈 배열일 경우 대비)
          REVIEWERS_JSON=$(echo "$API_RESPONSE" | jq '.requested_reviewers // []')

          echo "🟢 리뷰어 JSON 데이터: $REVIEWERS_JSON"

          # 리뷰어 정보를 JSON으로 변환
          REVIEWERS_FIELD=$(echo "$REVIEWERS_JSON" | jq -c '[.[] | {
            "name": "리뷰어",
            "value": "![\(.login)](\(.avatar_url)) [\(.login)](https://github.com/\(.login))",
            "inline": true
          }]')

          # 리뷰어가 없으면 기본 메시지 추가
          if [ -z "$REVIEWERS_FIELD" ] || [ "$REVIEWERS_FIELD" = "[]" ]; then
            REVIEWERS_FIELD='[{
              "name": "리뷰어",
              "value": "리뷰어가 없습니다.",
              "inline": true
            }]'
          fi

          # JSON 요청 바디 생성 (리뷰어 필드를 별도로 추가)
          PAYLOAD=$(jq -n --arg title "📌 Pull Request Created/Updated" \
            --arg description "새로운 PR이 생성되었거나 업데이트되었습니다." \
            --arg pr_title "[$PR_TITLE]($PR_URL)" \
            --arg pr_author "[$PR_AUTHOR](https://github.com/$PR_AUTHOR)" \
            --arg timestamp "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
            --argjson reviewers "$REVIEWERS_FIELD" \
            '{
              "embeds": [{
                "color": 16776960,
                "title": $title,
                "description": $description,
                "fields": (
                  [
                    { "name": "PR 제목", "value": $pr_title, "inline": false },
                    { "name": "작성자", "value": $pr_author, "inline": true }
                  ] + $reviewers
                ),
                "timestamp": $timestamp
              }]
            }')

          echo "🟢 생성된 JSON 페이로드:"
          echo "$PAYLOAD" | jq '.'

          # Discord 웹훅 요청 보내기
          curl -H "Content-Type: application/json" -X POST -d "$PAYLOAD" "$DISCORD_URL"
    env:
      GH_TOKEN: ${{ secrets.PR_ASSIGN_KEY }}
      DISCORD_URL: ${{ secrets.DISCORD_WEBHOO_BE }}